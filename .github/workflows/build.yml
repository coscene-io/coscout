# This is a workflow for building the cos executable on all three major platforms.
name: Build-Cos

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - main
  release:
    types: [ published ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  lint-n-test:
    uses: ./.github/workflows/lint-n-test.yml
    secrets:
      COS_API_KEY: ${{ secrets.COS_API_KEY }}

  check:
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'true'
          token: ${{ secrets.GH_TOKEN }}

      - id: check_version
        run: |
          echo $(git describe --dirty --tags --always)
          echo "version=$(git describe --dirty --tags --always)" >> "$GITHUB_OUTPUT"
    outputs:
      version: ${{ steps.check_version.outputs.version }}

  build_binaries:
    strategy:
      matrix:
        include:
#          - arch: x86_64
#            os: windows
#            label: windows-latest
#            file: cos.exe
          - arch: x86_64
            os: linux
            label: ubuntu-latest
            file: cos
          - arch: arm64
            os: linux
            label: [ linux-arm-64-8c-32g-300gb ]
            file: cos
    runs-on: ${{ matrix.label }}
    needs: [check, lint-n-test]
    container: python:3.10-alpine
    permissions:
      contents: write
    env:
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

    steps:
      - name: Setup build environment
        run: |
          apk update && apk add build-base make patchelf git ccache gcc python3-dev musl-dev linux-headers openssh-client
      - name: Setup Environment Variables
        shell: sh
        run: |
          echo "NUITKA_CACHE_DIR=${{ github.action_path }}/nuitka/cache" >> $GITHUB_ENV
          echo "PYTHON_VERSION=$(python3 --version | awk '{print $2}' | cut -d '.' -f 1,2)" >> $GITHUB_ENV

      - name: Check-out repo
        run: |
          git config --global url."https://${{ secrets.GH_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
          git config --global --add safe.directory /__w/coscout/coscout
          git clone https://github.com/coscene-io/coscout.git .
          git checkout ${{ github.sha }}

#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#          submodules: 'true'
#          token: ${{ secrets.GH_TOKEN }}

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.arch }}-pip
          restore-keys: ${{ runner.os }}-${{ matrix.arch }}-pip

      - name: Install Dependencies
        shell: sh
        env:
          version: ${{ needs.check.outputs.version }}
        run: |
          python3 -m pip install -r requirements.txt --extra-index-url https://buf.build/gen/python
          mkdir -p dist
          sh .github/scripts/update_version.sh $version

      - name: Cache Nuitka cache directory
        uses: actions/cache@v3
        with:
          path: ${{ env.NUITKA_CACHE_DIR }}
          key: ${{ runner.os }}-${{ runner.arch }}-python-${{ env.PYTHON_VERSION }}-nuitka-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-python-${{ env.PYTHON_VERSION }}-
            ${{ runner.os }}-${{ runner.arch }}-python-
            ${{ runner.os }}-${{ runner.arch }}-

      - name: Build cos binary
        shell: sh
        env:
          version: ${{ needs.check.outputs.version }}
        run: |
          python3 -m nuitka --experimental=allow-c-warnings --standalone --onefile --static-libpython=no --follow-imports --include-package=rosbags --output-filename=${{ matrix.file }} --output-dir=dist --company-name=coscene --onefile-tempdir-spec="{CACHE_DIR}/{COMPANY}/onefile_{PID}_{TIME}" --assume-yes-for-downloads main.py

      - name: Calculate SHA256
        shell: sh
        env:
          version: ${{ needs.check.outputs.version }}
        run: |
          echo $version > dist/version
          sha256sum dist/${{ matrix.file }} | cut -f 1 -d " " > dist/cos.sha256

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cos_${{matrix.os}}_${{matrix.arch}}
          path: |
            dist/${{ matrix.file }}
            dist/cos.sha256
            dist/version

      - name: Upload beta version to oss
        uses: tvrcgo/oss-action@d805009d52698055a35b19c14d190a02d04a4f43
        with:
          key-id: ${{ secrets.ACCESS_KEY_ID }}
          key-secret: ${{ secrets.ACCESS_KEY_SECRET }}
          region: oss-cn-hangzhou
          bucket: coscene-download
          assets: |
            dist/${{ matrix.file }}:/coscout/${{ matrix.os }}/${{ matrix.arch }}/${{ needs.check.outputs.version }}/${{ matrix.file }}
            dist/${{ matrix.file }}:/coscout/${{ matrix.os }}/${{ matrix.arch }}/beta/${{ matrix.file }}
            dist/version:/coscout/${{ matrix.os }}/${{ matrix.arch }}/${{ needs.check.outputs.version }}/version
            dist/version:/coscout/${{ matrix.os }}/${{ matrix.arch }}/beta/version
            dist/cos.sha256:/coscout/${{ matrix.os }}/${{ matrix.arch }}/${{ needs.check.outputs.version }}/cos.sha256
            dist/cos.sha256:/coscout/${{ matrix.os }}/${{ matrix.arch }}/beta/cos.sha256

      - name: Upload latest version to oss
        uses: tvrcgo/oss-action@d805009d52698055a35b19c14d190a02d04a4f43
        if: github.event_name == 'release'
        with:
          key-id: ${{ secrets.ACCESS_KEY_ID }}
          key-secret: ${{ secrets.ACCESS_KEY_SECRET }}
          region: oss-cn-hangzhou
          bucket: coscene-download
          assets: |
            dist/${{ matrix.file }}:/coscout/${{ matrix.os }}/${{ matrix.arch }}/${{ needs.check.outputs.version }}/${{ matrix.file }}
            dist/${{ matrix.file }}:/coscout/${{ matrix.os }}/${{ matrix.arch }}/latest/${{ matrix.file }}
            dist/version:/coscout/${{ matrix.os }}/${{ matrix.arch }}/${{ needs.check.outputs.version }}/version
            dist/version:/coscout/${{ matrix.os }}/${{ matrix.arch }}/latest/version
            dist/cos.sha256:/coscout/${{ matrix.os }}/${{ matrix.arch }}/${{ needs.check.outputs.version }}/cos.sha256
            dist/cos.sha256:/coscout/${{ matrix.os }}/${{ matrix.arch }}/latest/cos.sha256
